#!/usr/bin/env bash

PROJECTS=${PROJECTS:-"/var/www"}
DEFAULT="${USER}-default"

ZOXIDE_AVAILABLE=1
command -v zoxide >/dev/null 2>&1 || {
    echo >&2 "Zoxide is recommended, please consider installing it."
    ZOXIDE_AVAILABLE=0
}

# increase frecency
function increase {
    if [ $ZOXIDE_AVAILABLE -eq 0 ]; then
        return 0
    fi
    SELECTED="$1"
    if [[ "$SELECTED" == "$DEFAULT" ]]; then
        return 0
    fi
    zoxide add "$SELECTED"
}

function search {
    projects=$(find "$PROJECTS" -mindepth 1 -maxdepth 1 -type d)
    if [ $ZOXIDE_AVAILABLE -eq 1 ]; then
        declare -A ZOXIDE_CACHE

        # Fülle den Cache
        while IFS= read -r line; do
            SCORE=$(echo "$line" | awk '{print $1}')
            PFAD=$(echo "$line" | awk '{$1=""; print $0}' | sed 's/^ //')
            ZOXIDE_CACHE["$PFAD"]=$SCORE
        done < <(zoxide query -l -s "")

        CURRENT_SESSION=$(tmux display-message -p '#S')
        declare -A TMUX_SESSIONS
        while IFS= read -r session; do
            TMUX_SESSIONS["$session"]=$([[ "$CURRENT_SESSION" = "$session" ]] && echo 2 || echo 1)
        done < <(tmux list-sessions | sed -E 's/:.*$//')
        projects=$(
            echo "${projects[@]}" |
                while read -r p; do
                    BASE=${p#$PROJECTS/}
                    BASE=${BASE//./_}
                    ICON=$(
                        if [[ "${TMUX_SESSIONS[$BASE]}" == "1" ]]; then
                            echo "🚀"
                        elif [[ "${TMUX_SESSIONS[$BASE]}" == "2" ]]; then
                            echo "⭐"
                        else
                            echo ""
                        fi
                    )
                    echo "$BASE $ICON" >>/var/www/tmp/em/tmux
                    if [[ -n "${ZOXIDE_CACHE[$p]}" ]]; then
                        SCORE=${ZOXIDE_CACHE[$p]}
                        echo "$SCORE $p $ICON"
                    else
                        echo "0 $p $ICON"
                    fi
                done |
                sort -rnk1 |
                awk '{print $2 $3}'
        )
    fi
    #	projects=("${projects[@]}" "em-default")
    echo "$(
        echo "$DEFAULT"
        echo "${projects[@]}"
    )" | fzf-tmux --no-sort --prompt "  " | sed 's/\s*🚀//'
}

if [[ $# -eq 1 ]]; then
    selected=$1
else
    selected=$(search)
fi

if [[ -z $selected ]]; then
    exit 0
fi

increase "$selected"

selected_name=$(basename "$selected" | tr . _)
tmux_running=$(pgrep tmux)

function initTmuxSession {
    tmux new-session "$1" -s "$selected_name" -c "$selected" -n "Root"
    if [[ -d "$selected/packages" ]]; then
        PACKAGES="$selected/packages"
    elif [[ -d "$selected/typo3conf/ext" ]]; then
        PACKAGES="$selected/typo3conf/ext"
    fi

    KUNDEN="bc_kunden_${selected_name//-/_}"

    if [[ -n "$PACKAGES" && -d "$PACKAGES/$KUNDEN" ]]; then
        tmux new-window -t "$selected_name":2 -n "KundenExt" -c "$PACKAGES/$KUNDEN"
    elif [[ -n "$PACKAGES" && -d "$PACKAGES/${KUNDEN//_/-}" ]]; then
        tmux new-window -t "$selected_name":2 -n "KundenExt" -c "$PACKAGES/${KUNDEN//_/-}"
    fi

    tmux select-window -t "$selected_name":1
}

if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
    initTmuxSession
    exit 0
fi

if ! tmux has-session -t="$selected_name" 2>/dev/null; then
    initTmuxSession -d
fi

tmux switch-client -t "$selected_name"
